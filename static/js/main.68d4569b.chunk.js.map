{"version":3,"sources":["apiHelper.ts","components/EmployeeCard.tsx","components/ServiceCardLarge.tsx","components/ContactCard.tsx","components/IntroCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getIntro","a","fetch","response","json","getSections","getEmployees","getServices","getContacts","EmployeeCard","props","state","Col","xs","md","lg","Card","className","Header","this","Employee","Name","Title","Row","Img","variant","src","Image","Body","Text","Intro","Description","React","Component","ServiceCardLarge","Service","ContactCard","bgImage","BgImage","strength","renderLayer","percentage","id","style","position","background","left","top","borderRadius","transform","width","height","Contact","Street","PostalCode","City","Email","Phone","OrgNumber","IntroCard","columns","dangerouslySetInnerHTML","__html","rounded","App","chicago","ny","logo","logoInv","icon","hacker","winter","tree","forest","scrollTo","element","scroller","duration","delay","smooth","handleScroll","logoElement","document","getElementById","setState","hideIcon","isInViewport","MenuItem","section","Button","onClick","SectionId","Services","services","length","blur","min","max","minHeight","window","screen","availHeight","map","s","i","Employees","employees","emp","contact","sections","intros","el","rect","getBoundingClientRect","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","removeEventListener","addEventListener","sectionResponse","introResponse","employeesResponse","servicesResponse","contactResponse","minWidth","alt","hidden","scroll","scrollToTop","aria-pressed","intro","Index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.68d4569b.chunk.js","sourcesContent":["export const getIntro = async function(){\r\n    const response = await fetch(\"https://aviadospproxy.azurewebsites.net/api/getIntro?\");\r\n    return response.json();\r\n}\r\nexport const getSections = async function(){\r\n    const response = await fetch(\"https://aviadospproxy.azurewebsites.net/api/getSections?\");\r\n    return response.json();\r\n}\r\nexport const getEmployees = async function(){\r\n    const response = await fetch(\"https://aviadospproxy.azurewebsites.net/api/getEmployees?\");\r\n    return response.json();\r\n}\r\nexport const getServices = async function(){\r\n    const response = await fetch(\"https://aviadospproxy.azurewebsites.net/api/getServices?\");\r\n    return response.json();\r\n}\r\nexport const getContacts = async function(){\r\n    const response = await fetch(\"https://aviadospproxy.azurewebsites.net/api/getContacts?\");\r\n    return response.json();\r\n}","import React from 'react';\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\nimport { Employee } from '../models/models';\r\n\r\nexport interface IEmployeeCardProps {\r\n  Employee: Employee;\r\n}\r\n\r\nexport interface IEmployeeCardState {\r\n\r\n}\r\n\r\nexport default class EmployeeCard extends React.Component<IEmployeeCardProps, IEmployeeCardState> {\r\n\r\n  constructor(props: IEmployeeCardProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public render(): React.ReactElement<IEmployeeCardProps> {\r\n    return (\r\n      <Col xs={12} md={6} lg={6}>\r\n        <Card className=\"employeeCard\">\r\n          <Card.Header>{this.props.Employee.Name}{this.props.Employee.Title}</Card.Header>\r\n          <Row>\r\n            <Col>\r\n              <Card.Img variant=\"top\" src={this.props.Employee.Image} className=\"employeeImage\" />\r\n            </Col>\r\n            <Col>\r\n              <Card.Body>\r\n                <Card.Text>\r\n                  {this.props.Employee.Intro}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                  {this.props.Employee.Description}\r\n                </Card.Text>\r\n\r\n              </Card.Body>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Service } from '../models/models';\r\n\r\n\r\nexport interface IServiceCardProps {\r\n  Service: Service;\r\n}\r\n\r\nexport interface IServiceCardState {\r\n\r\n}\r\n\r\nexport default class ServiceCardLarge extends React.Component<IServiceCardProps, IServiceCardState> {\r\n\r\n  constructor(props: IServiceCardProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public render(): React.ReactElement<IServiceCardProps> {\r\n    return (\r\n      <Col xs={12} md={12} lg={12} className=\"serviceCard\">\r\n        <h2>{this.props.Service.Title}</h2>\r\n          \r\n      </Col>\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { Contact } from '../models/models';\r\nimport { Phone, At, Envelope } from 'react-bootstrap-icons';\r\nimport { Parallax } from 'react-parallax';\r\n\r\nexport interface IContactCardProps {\r\n  Contact: Contact;\r\n  BgImage:string;\r\n}\r\n\r\nexport interface IContactCardState {\r\n\r\n}\r\n\r\nexport default class ContactCard extends React.Component<IContactCardProps, IContactCardState> {\r\n\r\n  constructor(props: IContactCardProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public render(): React.ReactElement<IContactCardProps> {\r\n    return (\r\n      <Parallax\r\n        bgImage={this.props.BgImage}\r\n        strength={-400}\r\n        renderLayer={(percentage) => (\r\n          <div  id=\"Contact\">\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                background: `rgba(28, 32, 42, ${percentage * 1})`,\r\n                left: \"50%\",\r\n                top: \"50%\",\r\n                borderRadius: \"50%\",\r\n                transform: \"translate(-50%,-50%)\",\r\n                width: percentage * 500,\r\n                height: percentage * 500\r\n              }}\r\n            >\r\n              <div className=\"Contacts\"><h2>{this.props.Contact.Title}</h2>\r\n                <Row>\r\n                  <Col><Envelope /> {this.props.Contact.Street}</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>{this.props.Contact.PostalCode} {this.props.Contact.City}</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col><At /> {this.props.Contact.Email}</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col><Phone /> {this.props.Contact.Phone}</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>{this.props.Contact.OrgNumber}</Col>\r\n                </Row>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      >\r\n        <div style={{ height: 1200 }} id=\"contact\">\r\n        </div>\r\n      </Parallax>\r\n    );\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { Intro } from '../models/models';\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nexport interface IIntroCardProps {\r\n  Intro: Intro;\r\n  Index: number;\r\n}\r\n\r\nexport interface IIntroCardState {\r\n\r\n}\r\n\r\nexport default class IntroCard extends React.Component<IIntroCardProps, IIntroCardState> {\r\n\r\n  constructor(props: IIntroCardProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  public render(): React.ReactElement<IIntroCardProps> {\r\n    const columns = this.props.Intro.Image ? 6 : 12;\r\n    // if (this.props.Index % 2 !== 0) {\r\n    //   return (\r\n    //     <Row className=\"introCard\">\r\n    //       <Col xs={12} md={columns} lg={columns} className=\"introCardCol\">\r\n    //         {this.props.Intro.Image &&\r\n    //           <Image src={this.props.Intro.Image} rounded />\r\n    //         }\r\n    //       </Col>\r\n    //       <Col xs={12} md={columns} lg={columns} className=\"introCardCol\">\r\n    //         <Col className=\"introHeader\">{this.props.Intro.Title}</Col>\r\n    //         <Col><p>{this.props.Intro.Intro}</p></Col>\r\n    //         <Col><p dangerouslySetInnerHTML={{ __html: this.props.Intro.Description }} /></Col>\r\n    //       </Col>\r\n    //     </Row>\r\n    //   );\r\n    // } else {\r\n      return (\r\n        // <Col xs={12} md={4} lg={12} >\r\n        <Row className=\"introCard\">\r\n          <Col xs={12} md={columns} lg={columns} className=\"introCardCol\">\r\n            <Col className=\"introHeader\">{this.props.Intro.Title}</Col>\r\n            <Col><p>{this.props.Intro.Intro}</p></Col>\r\n            <Col><p dangerouslySetInnerHTML={{ __html: this.props.Intro.Description }} /></Col>\r\n          </Col>\r\n          <Col xs={12} md={columns} lg={columns} className=\"introCardCol\">\r\n            <Image src={this.props.Intro.Image} rounded />\r\n          </Col>\r\n        </Row>\r\n        // </Col>\r\n      );\r\n    }\r\n\r\n  // }\r\n\r\n}","import React from 'react';\nimport './App.css';\nimport { Parallax } from 'react-parallax';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Col,  Row, Button } from 'react-bootstrap';\nimport { scroller, animateScroll as scroll } from 'react-scroll';\nimport { getContacts, getEmployees, getIntro, getSections, getServices } from './apiHelper';\nimport EmployeeCard from './components/EmployeeCard';\n// import ServiceCard from './components/ServiceCard';\nimport ServiceCardLarge from './components/ServiceCardLarge';\nimport ContactCard from './components/ContactCard';\nimport IntroCard from './components/IntroCard';\nimport { Contact, Employee, Intro, Section, Service } from './models/models';\n\nexport interface IWebsiteProps {\n\n}\nexport interface IWebsiteState {\n  sections: Section[];\n  intros: Intro[];\n  employees: Employee[];\n  services: Service[];\n  contact: Contact;\n  hideIcon: boolean;\n}\nclass App extends React.Component<IWebsiteProps, IWebsiteState> {\n\n  constructor(props: IWebsiteProps) {\n    super(props);\n    this.state = { hideIcon: true, sections: [], intros: [], employees: [], services: [], contact: { Title: \"\", City: \"\", Email: \"\", OrgNumber: \"\", Phone: \"\", PostalCode: \"\", Street: \"\" } };\n  }\n\n\n  private isInViewport(el: any): boolean {\n    const rect = el.getBoundingClientRect();\n    return (\n      rect.top >= 0 &&\n      rect.left >= 0 &&\n      rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n\n    );\n  }\n\n\n  private chicago = \"images/chicago.jpg\";;\n  private ny = \"https://images.fineartamerica.com/images/artworkimages/mediumlarge/1/empire-state-building-black-and-white-square-format-john-farnan.jpg\";\n  private logo = \"/images/logo_300px.png\";\n  private logoInv = \"/images/logo_300px_inv.png\";\n  private icon = \"/images/ikoner_liten.png\";\n  private hacker = \"/images/hacking.jpg\";\n  private winter = \"/images/winter.jpg\";\n  private tree = \"/images/tree.png\";\n  private forest = \"/images/forest.jpg\";\n\n  private scrollTo = (element: string) => {\n    scroller.scrollTo(element, {\n      duration: 800,\n      delay: 0,\n      smooth: 'easeInOutQuart'\n    })\n  }\n  private handleScroll = () => {\n    const logoElement = document.getElementById(\"logo\");\n    this.setState({\n      hideIcon: this.isInViewport(logoElement)\n    })\n\n  };\n  async componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n  async componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll, true);\n    const sectionResponse = await getSections();\n    const introResponse = await getIntro();\n    const employeesResponse = await getEmployees();\n    const servicesResponse = await getServices();\n    const contactResponse = await getContacts();\n    this.setState({ sections: sectionResponse, employees: employeesResponse, services: servicesResponse, contact: contactResponse[0], intros: introResponse });\n  }\n\n  private MenuItem = (section: Section) => {\n    return (<li>\n      <Button onClick={() => this.scrollTo(section.SectionId)} className=\"btn btn-sm btn-outline-dark btn-link menuBtn border-0\">{section.Title}</Button>\n    </li>\n    );\n  };\n\n  private Services = (section: Section) => {\n    if (this.state.services.length === 0) return <span></span>;\n    return (\n      <Parallax blur={{ min: -25, max: 25 }} strength={600}>\n        <div style={{ minHeight: window.screen.availHeight + 20 }} className={section.SectionId} id={section.SectionId}>\n          <h2>{section.Title}</h2>\n          <Row>\n            {\n              this.state.services.map(function (s, i) {\n                return (<ServiceCardLarge Service={s} key={i}></ServiceCardLarge>);\n              })\n            }\n          </Row>\n\n        </div>\n        {/* <div className={section.SectionId} id={section.SectionId} >\n          <h2>{section.Title}</h2>\n          <Row>\n            {\n              this.state.services.map(function (s, i) {\n                return (<ServiceCard Service={s} key={i}></ServiceCard>);\n              })\n            }\n          </Row>\n        </div> */}\n      </Parallax>\n    );\n  };\n\n  private Employees = (section: Section) => {\n    if (this.state.employees.length === 0) return <span></span>;\n    return (\n      <Parallax>\n        <div style={{ minHeight: window.screen.availHeight + 20 }} id={section.SectionId} className={section.SectionId}>\n          <h2>{section.Title}</h2>\n          <Row>\n            {\n              this.state.employees.map(function (emp, i) {\n                return (<EmployeeCard Employee={emp} key={i}></EmployeeCard>);\n              })\n            }\n          </Row>\n        </div>\n      </Parallax>\n    );\n  };\n\n  private Contact = (section: Section) => {\n    if (this.state.employees.length === 0) return <span></span>;\n    return (<div style={{ minHeight: window.screen.availHeight + 20 }} >\n      <ContactCard Contact={this.state.contact} BgImage={this.winter} ></ContactCard>\n    </div>);\n  };\n\n  public render(): React.ReactElement<{}> {\n\n    return (\n      <div className=\"App\" >\n        {/* MENU */}\n        <div className=\"topStripe\" id=\"start\">\n          <div>\n            <ul>\n              <li style={{ minWidth: '38px', width: '38px' }}>\n                <span><img src={this.icon} className=\"logo\" alt=\"logo\" id=\"icon\" hidden={this.state.hideIcon} height=\"24px\" width=\"24px\" onClick={() => scroll.scrollToTop()} />&nbsp;</span>\n              </li>\n              <li>\n                <Button onClick={() => scroll.scrollToTop()} aria-pressed=\"false\" className=\"btn-sm btn-outline-dark btn-link menuBtn\">Hjem</Button>\n              </li>\n              {this.state.sections.map((s, i) => {\n                return this.MenuItem(s);\n              })\n              }\n            </ul>\n\n          </div>\n        </div>\n        {/* END MENU */}\n        {/* <Container fluid> */}\n          {/* <Row>\n            <Col className=\"firstCol\"> */}\n              <div id=\"main\">\n                {/* INTRO */}\n                <Parallax bgImage={this.chicago} blur={{ min: -25, max: 25 }} strength={600}>\n                  <Row>\n                    <Col>\n                      <div className=\"logoSection\" id=\"logo\">\n                        <img src={this.logo} className=\"logo\" alt=\"logo\" />\n                      </div>\n                    </Col>\n                  </Row>\n\n                  <div className=\"startSection\" style={{ minHeight: window.screen.availHeight + 20 }}>\n                    {\n                      this.state.intros.map(function (intro, i) {\n                        return (<IntroCard Intro={intro} Index={i} key={i}></IntroCard>);\n                      })\n                    }\n                    \n                  </div>\n                </Parallax>\n                {/* END INTRO */}\n                {\n                  this.state.sections.map((s, i) => {\n                    if (s.Title === 'Kompetanseområder') {\n                      return this.Services(s);\n                    }\n                    if (s.Title === 'Ansatte') {\n                      return this.Employees(s);\n                    }\n                    if (s.Title === 'Kontakt') {\n                      return this.Contact(s);\n                    }\n                    return (\n                      <span></span>\n                    );\n                  })\n                }\n              </div>\n            {/* </Col>\n          </Row> */}\n        {/* </Container> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}